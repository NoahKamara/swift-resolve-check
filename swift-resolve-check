#!/bin/bash
# .git-hooks/swift-resolve-check
set -eo pipefail

usage() {
  echo "Usage: $0 [--fail|--update] [--package-path <path>] [--swift <swift-executable>] [--] [swift package resolve args...]"
  echo "  --fail         Fail if Package.resolved changes (default)"
  echo "  --update      Update Package.resolved if changed and continue"
  echo "  --package-path <path>  Specify package directory (default: .)"
  echo "  --swift <swift-executable>  Specify Swift executable (default: swift)"
  echo "  --            Pass remaining args to 'swift package resolve'"
  echo "\nExtra arguments can be passed via pre-commit's 'args:' in .pre-commit-config.yaml."
  exit 1
}

MODE="fail"
PACKAGE_PATH="."
SWIFT="swift"
ARGS=()

while [[ $# -gt 0 ]]; do
  case "$1" in
  --fail)
    MODE="fail"
    shift
    ;;
  --update)
    MODE="update"
    shift
    ;;
  --package-path)
    PACKAGE_PATH="$2"
    shift 2
    ;;
  --swift)
    SWIFT="$2"
    shift 2
    ;;
  --)
    shift
    ARGS+=("$@")
    break
    ;;
  -h | --help)
    usage
    ;;
  *)
    ARGS+=("$1")
    shift
    ;;
  esac

done

RESOLVED_FILE="$PACKAGE_PATH/Package.resolved"
if [ ! -f "$RESOLVED_FILE" ]; then
  echo "Missing $RESOLVED_FILE"
  exit 1
fi

cp "$RESOLVED_FILE" "$RESOLVED_FILE.bak"
if [ ${#ARGS[@]} -gt 0 ]; then
  "$SWIFT" package resolve --package-path "$PACKAGE_PATH" "${ARGS[@]}"
else
  "$SWIFT" package resolve --package-path "$PACKAGE_PATH"
fi

if ! diff -q "$RESOLVED_FILE" "$RESOLVED_FILE.bak" >/dev/null; then
  if [ "$MODE" = "fail" ]; then
    echo "Package.resolved changed after resolving. Commit halted."
    diff "$RESOLVED_FILE.bak" "$RESOLVED_FILE" || true
    rm "$RESOLVED_FILE.bak"
    exit 1
  else
    echo "Package.resolved updated after resolving. Continuing."
    diff "$RESOLVED_FILE.bak" "$RESOLVED_FILE" || true
    rm "$RESOLVED_FILE.bak"
    exit 0
  fi
fi

rm "$RESOLVED_FILE.bak"
